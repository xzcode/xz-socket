
subprojects {
	apply plugin: 'java'
	apply plugin: 'maven-publish'
	
	
	def profile = System.getProperty("profile")
	
	repositories {
		if('test'.equals(profile)){
			maven {url "${testNexusPublicUrl}"}		
		}else {
			maven {url "${nexusPublicUrl}"}	
		}
		mavenLocal()
	}
	
	dependencies {
		
	}	
	
	tasks.withType(JavaCompile) {  
		options.encoding = "UTF-8"  
	} 
		
	task sourceJar(type: Jar) {
		from sourceSets.main.allJava
	}
	
	publishing {
	    publications {
	        mavenJava(MavenPublication) {
	            from components.java
		    artifact sourceJar {
			classifier "sources"
		    }
	        }
	    }
	    repositories {
	        if('test'.equals(profile)){
	        	maven {
		            url version.endsWith('SNAPSHOT') ? "${testNexusSnapshotsUrl}" : "${testNexusReleaseUrl}"
		            credentials {
			            username = System.getProperty("nexusUsername")
			            password = System.getProperty("nexusPassword")
			        }
		        }
	        }else {
		        maven {
		            url version.endsWith('SNAPSHOT') ? "${nexusSnapshotsUrl}" : "${nexusReleaseUrl}"
		            credentials {
			            username = nexusUsername
			            password = nexusPassword
			        }
		        }
	        }
	    }
	    
	}
	
}

task cleanGradleLocalCache  { 
	doLast{ 
		File file = new File("${getEnv('GRADLE_USER_HOME')}/caches/modules-2/files-2.1/sourcemuch-commons")
		file.deleteDir()
	}
}


task showEnv  { 

	doLast{ 
		println System.getenv()
	}
}

def getEnv(name){ 
	System.getenv()[name]
}

